name: "Setup and Release CodeQL with Standards and Dependencies"

permissions:
  contents: write  # Permet d'écrire sur le contenu, y compris la création de releases
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  setup-and-release:
    runs-on: windows-latest

    steps:
      - name: "Checkout Repository"
        uses: actions/checkout@v2

      - name: Install Chocolatey
        shell: pwsh
        run: |
          # Verify Chocolatey installation
          choco --version || echo "Chocolatey installation failed."

          # Install desired packages
          choco install tree 7zip -y
  
          # Verify installations
          tree /? || echo "Tree installed successfully."

      - name: "Download and unzip"
        shell: bash
        run: |
          CODEQL_BINARIES_URL="https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-win64.zip"
          QUERIES_URL="https://github.com/github/codeql/archive/refs/tags/codeql-cli/latest.zip"
          CODING_STANDARDS_URL="https://github.com/github/codeql-coding-standards/releases/latest/download/code-scanning-cpp-query-pack.zip"
          
          echo "Downloading CodeQL Binaries..."
          CODEQL_BINARIES_URL="https://github.com/github/codeql-cli-binaries/releases/latest/download/codeql-win64.zip"
          echo "Downloading from: $CODEQL_BINARIES_URL"
          curl -s -L -o codeql-win64.zip "$CODEQL_BINARIES_URL"
          unzip -q codeql-win64.zip -d codeql

          echo "Downloading Queries..."
          QUERIES_URL="https://github.com/github/codeql/archive/refs/tags/codeql-cli/latest.zip"
          echo "Downloading from: $QUERIES_URL"
          curl -s -L -o codeql-queries.zip "$QUERIES_URL"
          unzip -q codeql-queries.zip

          echo "Downloading Coding Standards..."
          CODING_STANDARDS_URL="https://github.com/github/codeql-coding-standards/releases/latest/download/code-scanning-cpp-query-pack.zip"
          echo "Downloading from: $CODING_STANDARDS_URL"
          curl -s -L -o codeql-coding-standards.zip "$CODING_STANDARDS_URL"
          unzip -q codeql-coding-standards.zip -d temp_extraction
          unzip -q ./temp_extraction/code-scanning-cpp-query-pack.zip -d codeql-coding-standards
          echo "############### ROOT"
          ls ./
          echo "############### TMPS"
          ls ./temp_extraction/
          echo "############### TMPS"
          ls ./codeql-coding-standards/
          #tree ./ /F /A /L 2
 
      - name: "Install Dependencies in Coding Standards Packages"
        run: |
          echo "Installing dependencies in cert package..."
          cd codeql-coding-standards/codeql-coding-standards/c/cert/src
          ../../../../../codeql/codeql/codeql.exe pack install
          cd -

          echo "Installing dependencies in common package..."
          cd codeql-coding-standards/codeql-coding-standards/c/common/src
          ../../../../../codeql/codeql/codeql.exe pack install
          cd -
        shell: bash

      - name: "Archive Installed Packages from CodeQL Cache"
        run: |
          echo "Archiving installed packages from CodeQL cache..."
          echo "cache "
          ls ~/.codeql/packages/codeql 
          echo "runnner "
          ls "/c/Users/runneradmin/.codeql/packages/codeql"
          7z a -tzip codeql_cache_packages.zip ~/.codeql/*
        shell: bash

      - name: "Delete Existing Release v1"
        id: delete_release
        run: |
          echo "Checking for existing release..."
          existing_release=$(curl -s -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/${{ github.repository }}/releases/tags/v1 | jq -r '.id')
          
          if [ "$existing_release" != "null" ]; then
            echo "Deleting existing release v1..."
            curl -X DELETE -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              https://api.github.com/repos/${{ github.repository }}/releases/$existing_release
          else
            echo "No existing release v1 found."
          fi
        shell: bash

      - name: "Create New GitHub Release v1"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo "Creating new release v1..."
          gh release create v1.0.0 --title "Release v1.0.0" --notes "Description of the release."
  
          echo "Release created: $response"
        shell: bash

      - name: "Upload CodeQL Zip to Release"
        run: |
          echo "Uploading CodeQL archive to release..."
          release_id=$(echo "$response" | jq -r '.id')
          curl -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            -H "Content-Type: application/zip" \
            --data-binary @"./codeql_cache_packages.zip" \
            "https://uploads.github.com/repos/${{ github.repository }}/releases/$release_id/assets?name=codeql_cache_packages.zip"
        shell: bash
